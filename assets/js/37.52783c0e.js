(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{317:function(n,t,s){"use strict";s.r(t);var e=s(14),a=Object(e.a)({},(function(){var n=this._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("h1",{attrs:{id:"_4-css清除浮动的几种方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-css清除浮动的几种方法"}},[this._v("#")]),this._v(" 4. CSS清除浮动的几种方法")]),this._v(" "),n("p",[this._v("参考答案：")]),this._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v('清除浮动： 核心：clear:both;\n\n1.使用额外标签法（不推荐使用）\n\n在浮动的盒子下面再放一个标签，使用 clear:both;来清除浮动\n\na 内部标签：会将父盒子的高度重新撑开\n\nb 外部标签：只能将浮动盒子的影响清除，但是不会撑开盒子\n\n2.使用 overflow 清除浮动（不推荐使用）\n\n先找到浮动盒子的父元素，给父元素添加一个属性：overflow:hidden;就会清除子元素对页面的影响\n\n3.使用伪元素清除浮动(用的最多)\n\n伪元素：在页面上不存在的元素，但是可以通过 css 添加上去\n\n种类：\n      :after(在。。。之后)\n      :before(在。。。之前)\n\n注意：每个元素都有自己的伪元素\n\n.clearfix:after {\n    content:""; \n    height:0;\n    line-height:0;\n    display:block;\n    clear:both;\n    visibility:hidden;  /_将元素隐藏起来_/ \n      在页面的 clearfix 元素后面添加了一个空的块级元素\n     （这个元素的高为 0 行高也为 0   并且这个元素清除了浮动）\n}\n.clearfix {\n  zoom:1;/_为了兼容 IE6_/\n}\n')])])])])}),[],!1,null,null,null);t.default=a.exports}}]);